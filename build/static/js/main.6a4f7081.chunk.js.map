{"version":3,"sources":["BooksAPI.js","ShelfSelector.js","BookDisplay.js","Bookshelf.js","BookCase.js","Catalog.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","ShelfSelector","state","selectedShelf","_this","props","this","setState","updateShelf","react_default","a","createElement","className","value","onChange","e","target","disabled","Component","BookDisplay","console","log","map","key","style","width","imageLinks","height","backgroundImage","thumbnail","src_ShelfSelector","title","authors","join","Bookshelf","_this$props","src_BookDisplay","BookCase","backpack","src_Bookshelf","filter","Catalog","error","showSearchPage","bookFinder","searchTerm","setTimeout","catalogSearch","trim","BooksAPI","response","shelvedBooks","length","result","shelved","_this2","Link","to","type","placeholder","event","href","BooksApp","refreshAllBooks","booklist","slice","selectedBook","sort","sortBy","push","_this3","Route","exact","path","render","src_Catalog","src_BookCase","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6a4f7081.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': 'sample-react-app'\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'                                                                                                                \n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\n\nclass ShelfSelector extends Component {\n\n  state = {\n    selectedShelf: this.props.shelf\n  }\n\ncomponentDidMount() {\n  this.setState({selectedShelf: this.props.book.shelf})\n}\n\n\nrender() {\n\n\tconst updateShelf = this.props.updateShelf\n\tconst book = this.props.book\n\t\n\treturn (\n\t                        \t<div className=\"book-shelf-changer\">\n\t\t                             <select\n\t\t                                value={book.shelf ? book.shelf : 'none'}\n\t\t                                onChange={(e) => updateShelf(book, e.target.value)}>\n\n\t\t                                <option value=\"move\" disabled>Move to...</option>\n\t\t                                <option value=\"currentlyReading\">Currently Reading</option>\n\t\t                                <option value=\"wantToRead\">Want to Read</option>\n\t\t                                <option value=\"read\">Read</option>\n\t\t                                <option value=\"none\">None</option>\n\n\t\t                             </select>\n                            \t</div>\n\t)\n}\n}\n\nexport default ShelfSelector","import React, { Component } from 'react'\nimport ShelfSelector from './ShelfSelector'                                                                                 \n\nclass BookDisplay extends Component {\n\n\nrender() {\n\t\tlet books = this.props.books\n\t\tconsole.log(books)\n\n\treturn (\n\t\t<div>\n           <ol className=\"books-grid\">\n\t\t\t\t{books.map((book) =>\n \t\t\t\t\t<li key={book.id} style={{\n\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t}}>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n                          {book.imageLinks ?\n\t\t\t\t\t\t\t(<div className='image-book-cover' style={{\n\t\t\t\t\t\t\t\t\twidth: 128,\n\t\t\t\t\t\t\t\t\theight: 193,\n\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${book.imageLinks.thumbnail})`\n\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t<ShelfSelector \n\t\t\t\t\t\t\t\t\t\t\tbook={book} \n\t\t\t\t\t\t\t\t\t\t\tshelf={book.shelf} \n\t\t\t\t\t\t\t\t\t\t\tupdateShelf={this.props.updateShelf} />\n                          \t</div>\n                          \t):(\n\t\t\t\t\t\t\t<div className='image-book-cover' style={{\n\t\t\t\t\t\t\t\t\twidth: 128,\n\t\t\t\t\t\t\t\t\theight: 193,\n\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t<ShelfSelector \n\t\t\t\t\t\t\t\t\t\t\tbook={book} \n\t\t\t\t\t\t\t\t\t\t\tshelf={book.shelf} \n\t\t\t\t\t\t\t\t\t\t\tupdateShelf={this.props.updateShelf} />\n                          \t</div>\n                          \t)}\n\n                       </div>\n                          \t<div className=\"book-title\">{book.title}</div>\n\t\t\t\t\t\t\t<div className='book-authors'> by {book.authors && book.authors.join(' & ') || \"Author Unlisted\"}\n\t\t\t\t\t\t\t</div>\n                        </div>\n\n                      </li>\n \t\t\t\t)}\n\n\t\t\t</ol>\n\t\t</div>\n\t)\n}\n}\n\nexport default BookDisplay","import React, { Component } from 'react'\nimport BookDisplay from './BookDisplay'                                                                                 \n\nclass Bookshelf extends Component {\n\n\n\trender() {\n\t\tconst { books, shelf } = this.props\n\t\tconsole.log(books)\n\n\t\treturn (\n\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">{shelf}</h2>\n                  <div className=\"bookshelf-books\">\n\n                    <BookDisplay books={books} updateShelf={this.props.updateShelf} />\n\n                  </div>\n                </div>\n \n)\n}\n}\n\nexport default Bookshelf","import React, { Component } from 'react'\nimport Bookshelf from './Bookshelf'                                                                                 \n\n\nconst BookCase = (props) => {\n\n    let backpack = props.books\n\n\treturn (\n      <div>\n      <Bookshelf \n          books={backpack.filter((book) => {\n                    return book.shelf === 'currentlyReading'\n                  })} \n          shelf={'Currently Reading'} \n          updateShelf={props.updateShelf} />\n      <Bookshelf \n          books={backpack.filter((book) => {\n                    return book.shelf === 'wantToRead'\n                  })} \n          shelf={'Bucket List Books'} \n          updateShelf={props.updateShelf} />\n      <Bookshelf \n          books={backpack.filter((book) => {\n                    return book.shelf === 'read'\n                  })} \n          shelf={'Been there, done that... :)'} \n          updateShelf={props.updateShelf} />\n      </div>\n\t)\n}\n\n\nexport default BookCase","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport BookDisplay from './BookDisplay'                                                                                 \n\n\n\n\nclass Catalog extends Component {\n\t\n\tstate= {\n\t\t\tquery: '',\n\t\t\tbooks: [],\n\t\t\terror: false,\n\t\t\tshowSearchPage: true\n\t}\n\n\tbookFinder = (searchTerm) => {\n\t\tsetTimeout(this.setState({query: searchTerm}), 250)\n\t\tthis.catalogSearch(searchTerm)\n\t}\n\n\tcatalogSearch = (searchTerm) => {\n\t\tif(!searchTerm.trim()) {\n\t\t\tthis.setState({error: false, books: []})\n\t\t\treturn\n\t\t} else {\n\t\tBooksAPI\n\t\t\t.search(searchTerm)\n\t\t\t.then(response => {\n\t\t\t\tlet shelvedBooks = this.props.books\n\t\t\t\tif(response.length) {\n\t\t\t\t\tresponse.map((result) => {\n\t\t\t\t\t\tresult.shelf = 'none'\n\t\t\t\t\t\tshelvedBooks.map((shelved) => {\n\t\t\t\t\t\t\tif(result.id === shelved.id) {\n\t\t\t\t\t\t\t\tresult.shelf = shelved.shelf\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\tthis.setState({books: response})\n\t\t\t\t} else {\n\t\t\t\tthis.setState({error: true, books: []})\n\t\t\t\t}})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst books = this.state.books\n\t\tconst shelvedBooks = this.props.books\n\t\tconsole.log(books)\n\t\tconsole.log(shelvedBooks)\n\t\treturn (\n\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\"  >\n\n              <Link to='/' \n              \tclassName=\"close-search\" >\n              \tClose\n              </Link>\n\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input \n                \ttype=\"text\" \n                \tplaceholder=\"Search by title or author\" \n\t\t\t\t\tvalue={this.state.query}\n\t\t\t\t\tonChange={(event) => this.bookFinder(event.target.value)} \n                \t/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n\n                <BookDisplay books={books} updateShelf={this.props.updateShelf} />\n                <p>\n\t\t\t\t\t<a href=\"https://pngtree.com/free-vectors\"> free blank book image vector from pngtree.com</a>\n          \t\t</p>\n              </ol>\n\n            </div>\n      </div>\n\n\n)\n}}\n\nexport default Catalog","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport sortBy from 'sort-by'\nimport * as BooksAPI from './BooksAPI'\nimport BookCase from './BookCase'\nimport Catalog from './Catalog'\nimport './App.css'\n\nclass BooksApp extends Component {\n  state = {\n    books: [],\n    showSearchPage: false\n  }\n\ncomponentDidMount() {\n      BooksAPI.getAll().then((books) => {\n      books.sort(sortBy('title'))\n          this.setState({books: books})\n          console.log(books)\n      })\n    }\n\nrefreshAllBooks = () => {\n          this.setState({showSearchPage: false})\n}\n\nupdateShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n        .then(response => {\n            let booklist = this.state.books.slice(0)\n            let books = booklist.filter(selectedBook => selectedBook.id === book.id)\n          if(books.length) {\n              books[0].shelf = shelf\n              books.sort(sortBy('title'))\n              this.setState({\n                books: booklist,\n                showSearchPage: false})\n          } else {\n              let bookList = this.state.books\n              booklist.push(book)\n              booklist.sort(sortBy('title'))\n              this.setState({\n                books: booklist,\n                showSearchPage: false})\n          }\n        })\n    }\n\n  render() {\n\n\n    return (\n      <div className=\"app\">\n          <Route exact path = '/catalog'\n              render = {() => (\n                  <Catalog books={this.state.books} updateShelf={this.updateShelf} refreshAllBooks={this.refreshAllBooks} />\n          )} />\n\n        <Route exact path='/'\n            render={() => (\n                <div className=\"list-books\">\n                    <div className=\"list-books-title\">\n                      <h1>My Bookmobile</h1>\n                    </div>\n\n                    <div className=\"list-books-content\">\n                      <div>\n                        <BookCase books={this.state.books} updateShelf={this.updateShelf} />\n                      </div>\n                    </div>\n\n                  <div className=\"open-search\">\n                      <Link to='/catalog'>Add a book</Link>\n                  </div>\n                </div>\n            )} />\n      </div>\n    )\n\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<BrowserRouter><App /></BrowserRouter>,\n\tdocument.getElementById('root'))\n"],"sourceRoot":""}